name: CI

on:
  push:
  pull_request:
    paths:
      - .changeset/**
      - .github/workflows/ci.yml
      - 'packages/**'
      - 'test/**'
      - 'docker-examples/**'
      - 'jest/**'
      - 'package.json'
      - 'pnpm-workspace.yaml'
permissions:
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-latest
    name: setup verdaccio
    services:
      verdaccio:
        image: verdaccio/verdaccio:5
        ports:
          - 4873:4873
        env:
          NODE_ENV: production          
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
    - name: Node
      uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # tag=v3
      with:
        node-version-file: '.nvmrc'
    - name: Install pnpm
      run: |
        corepack enable
        corepack prepare --activate pnpm@latest-8
    - name: set store
      run: |
        mkdir ~/.pnpm-store
        pnpm config set store-dir ~/.pnpm-store
    - name: Install
      run: pnpm install  --registry http://localhost:4873
    - name: Cache .pnpm-store
      uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
      with:
        path: ~/.pnpm-store
        key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}
        restore-keys: |
          pnpm-
  lint:
    runs-on: ubuntu-latest
    name: Lint
    needs: prepare
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      - name: Node
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # tag=v3
        with:
          node-version-file: '.nvmrc'
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare --activate pnpm@latest-8
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - name: set store
        run: |
          pnpm config set store-dir ~/.pnpm-store              
      - name: Install
        run: pnpm install --ignore-scripts
      - name: Lint
        run: pnpm lint
  format:
    runs-on: ubuntu-latest
    name: Format
    needs: prepare
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      - name: Use Node
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # tag=v3
        with:
          node-version-file: '.nvmrc'
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare --activate pnpm@latest-8
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - name: set store
        run: |
          pnpm config set store-dir ~/.pnpm-store              
      - name: Install
        run: pnpm install --ignore-scripts
      - name: Lint
        run: pnpm format:check
  test:
    needs: [format, lint]
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        node_version: [16, 18]
    name: ${{ matrix.os }} / Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      - name: Use Node ${{ matrix.node_version }}
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # tag=v3
        with:
          node-version: ${{ matrix.node_version }}
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare --activate pnpm@latest-8
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - name: set store
        run: |
          pnpm config set store-dir ~/.pnpm-store              
      - name: Install
        run: pnpm install --ignore-scripts --registry http://localhost:4873
      - name: build
        run: pnpm build
      - name: Test
        run: pnpm test
  sync-translations:
    needs: [test]
    runs-on: ubuntu-latest
    name: synchronize translations
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      - uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # tag=v3
        with:
          node-version-file: '.nvmrc'
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare --activate pnpm@latest-8
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - name: set store
        run: |
          pnpm config set store-dir ~/.pnpm-store              
      - name: Install
        ## we need scripts, pupetter downloads aditional content
        run: pnpm install --registry http://localhost:4873
      - name: build
        run: pnpm build
      - name: generate website translations
        run: pnpm --filter ...@verdaccio/website write-translations
      - name: sync
        env:
          CROWDIN_VERDACCIO_API_KEY: ${{ secrets.CROWDIN_VERDACCIO_API_KEY }}
          CONTEXT: production
        run: pnpm crowdin:sync
